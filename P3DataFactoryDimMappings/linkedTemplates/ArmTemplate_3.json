{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "P3DataFactoryDimMappings"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Sink_DimLanguage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LanguageCode_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Language_Code",
						"type": "varchar"
					},
					{
						"name": "Language_Name",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimLanguageCodes"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_DimPlan')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "SRC_PlanCode",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_PlanCode_xlx.xlsx",
						"container": "dimmapping"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Plan_ID                             ",
						"type": "String"
					},
					{
						"name": "Plan_Start_Date",
						"type": "String"
					},
					{
						"name": "Plan_End_Date",
						"type": "String"
					},
					{
						"name": "Plan_Name_Description            ",
						"type": "String"
					},
					{
						"name": "Line_Of_Business                  ",
						"type": "String"
					},
					{
						"name": "Plan_Product_Code                 ",
						"type": "String"
					},
					{
						"name": "market_Type                       ",
						"type": "String"
					},
					{
						"name": "Grandfathered_Plan_Flag              ",
						"type": "String"
					},
					{
						"name": "Metal_level                        ",
						"type": "String"
					},
					{
						"name": "Acturial_Value ",
						"type": "String"
					},
					{
						"name": "Issuer_State",
						"type": "String"
					},
					{
						"name": "Issuer_ID",
						"type": "String"
					},
					{
						"name": "Plan_On_Off_Exchange_Indicator",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_DimPlan')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Plan_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Plan_ID",
						"type": "varchar"
					},
					{
						"name": "Plan_Start_Date",
						"type": "date"
					},
					{
						"name": "Plan_End_Date",
						"type": "date"
					},
					{
						"name": "Plan_Name_Description",
						"type": "varchar"
					},
					{
						"name": "LineofBusinessCodeCatCode",
						"type": "varchar"
					},
					{
						"name": "Plan_Product_Code",
						"type": "varchar"
					},
					{
						"name": "market_Type",
						"type": "varchar"
					},
					{
						"name": "Grandfathered_Plan_Flag",
						"type": "char"
					},
					{
						"name": "Metal_level",
						"type": "varchar"
					},
					{
						"name": "Acturial_Value",
						"type": "varchar"
					},
					{
						"name": "Issuer_State",
						"type": "varchar"
					},
					{
						"name": "Issuer_ID",
						"type": "varchar"
					},
					{
						"name": "Plan_On_Off_Exchange_Indicator",
						"type": "char"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimPlan"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_DimProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Product Codes",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_Product Codes_updated.xlsx",
						"container": "dimmapping"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "PRODUCT CODE",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_DimProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductCode_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Product_Code",
						"type": "varchar"
					},
					{
						"name": "Product_Code_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimProduct"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SC_DimProviderGroup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_Provider_Group_non_dupi.csv",
						"container": "dimmapping"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "GROUP_PROVIDER_ID",
						"type": "String"
					},
					{
						"name": "GROUP_NAME",
						"type": "String"
					},
					{
						"name": "Provider_Group_Status            ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Address_1         ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Address_2         ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Zip_Code         ",
						"type": "String"
					},
					{
						"name": "Provider_Group_City              ",
						"type": "String"
					},
					{
						"name": "Provider_Group_County_Code        ",
						"type": "String"
					},
					{
						"name": "Provider_Group_State_Code       ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Country_Code    ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Contact           ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Phone             ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Fax               ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Email             ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Group_Date        ",
						"type": "String"
					},
					{
						"name": "Provider_Group_End_Date          ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Type              ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Function_Indicator  ",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_DimProviderGroup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProviderGroup_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Provider_Group_ID",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Name",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Status",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Address_1",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Address_2",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Zip_Code",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_City_Code",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_County_Code",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_State_Code",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Country_Code",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Contact",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Phone",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Fax",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Email",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Group_Date",
						"type": "date"
					},
					{
						"name": "Provider_Group_End_Date",
						"type": "date"
					},
					{
						"name": "Provider_Group_Type",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Function_Indicator",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIMProviderGroup"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_DimSpecialityCodesCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_SpecialityTaxonomyCodes.csv",
						"container": "dimmapping"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Speciality_KEY",
						"type": "String"
					},
					{
						"name": "CMS SPECIALTY CODE",
						"type": "String"
					},
					{
						"name": "CMS SPECIALTY DESCRIPTION",
						"type": "String"
					},
					{
						"name": "PROVIDER TAXONOMY CODE",
						"type": "String"
					},
					{
						"name": "PROVIDER TAXONOMY DESCRIPTION TYPE",
						"type": "String"
					},
					{
						"name": "PROVIDER TAXONOMY DESCRIPTION CLASSIFICATION and SPECIALIZATION",
						"type": "String"
					},
					{
						"name": "RBI DATA SPECIALITY CODE",
						"type": "String"
					},
					{
						"name": "PROVIDER TYPE",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ContractCategoryCode')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_ContractCategoryCode",
								"type": "DatasetReference"
							},
							"name": "SRCContractCategoryCode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimContractCategoryCode",
								"type": "DatasetReference"
							},
							"name": "TRDimContractCategoryCode"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{Code } as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCContractCategoryCode\nSRCContractCategoryCode sink(input(\n\t\tContractCategoryCode_Key as integer,\n\t\tContractCategoryCode as string,\n\t\tContractCategoryCodedesC as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tContractCategoryCode = {Code },\n\t\tContractCategoryCodedesC = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRDimContractCategoryCode"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DIMMDC_Codes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_MDC_Codes",
								"type": "DatasetReference"
							},
							"name": "SRCMDCCodes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_MDCCodes",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{PK\u0003\u0004\u0014\u0000\u0006\u0000\b\u0000\u0000\u0000!\u0000�+t} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCMDCCodes\nSRCMDCCodes sink(input(\n\t\tMDC_Code_KEY as integer,\n\t\tMDC_Code as string,\n\t\tMDC_Code_Desc as string,\n\t\tStart_DRG_Code as string,\n\t\tEnd_DRG_Code as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DimBenefitPlantype')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_BenefitPlantype",
								"type": "DatasetReference"
							},
							"name": "SRCBenefitPlantype"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimBenefitPlanType",
								"type": "DatasetReference"
							},
							"name": "TRDimBenefitPlantype"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCBenefitPlantype\nSRCBenefitPlantype sink(input(\n\t\tBenefitPlanType_Key as integer,\n\t\tBenefitPlanTypeCode as string,\n\t\tBenefitPlanTypeCodedesp as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tBenefitPlanTypeCode = Code,\n\t\tBenefitPlanTypeCodedesp = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRDimBenefitPlantype"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DimEnrollment_contract')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_Enrollment_contract",
								"type": "DatasetReference"
							},
							"name": "SRCEnrollmentContract"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimEnrollmentContract",
								"type": "DatasetReference"
							},
							"name": "TRDimEnrollmentContract"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tskipLines: 1) ~> SRCEnrollmentContract\nSRCEnrollmentContract sink(input(\n\t\tEnrollmentContract_Key as integer,\n\t\tEnrollment_Contract_ID as string,\n\t\tContract_Number as string,\n\t\tContract_Desc as string,\n\t\tContract_Category_Code as string,\n\t\tLineofBusinessCodeCatCode as string,\n\t\tLineofBusinessCodeSubCatCode as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tEnrollment_Contract_ID = Column_1,\n\t\tContract_Number = Column_2,\n\t\tContract_Desc = Column_3,\n\t\tContract_Category_Code = Column_4,\n\t\tLineofBusinessCodeCatCode = Column_5,\n\t\tLineofBusinessCodeSubCatCode = Column_6\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRDimEnrollmentContract"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DimLineOfBusinessCategoryCode')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_LineOfBusinessCategoryCode",
								"type": "DatasetReference"
							},
							"name": "SRCLineOfBusinessCategoryCode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimLineOfBusinessCategoryCode",
								"type": "DatasetReference"
							},
							"name": "TRDimLineOfBusinessCategoryCode"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCLineOfBusinessCategoryCode\nSRCLineOfBusinessCategoryCode sink(input(\n\t\tLineofBusinessCodeCatCode_Key as integer,\n\t\tLineofBusinessCodeCatCode as string,\n\t\tLineofBusinessCodeCatDesc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tLineofBusinessCodeCatCode = Code,\n\t\tLineofBusinessCodeCatDesc = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRDimLineOfBusinessCategoryCode"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DimLineOfBusinessSubCategoryCode')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_LineOfBusinessSubCategoryCode",
								"type": "DatasetReference"
							},
							"name": "SRCLineOfBusinessSubCategoryCode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimLineofBusinessCodeSubCatCode",
								"type": "DatasetReference"
							},
							"name": "TRDimLineOfBusinessSubCategoryCode"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string,\n\t\tLOBCategory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCLineOfBusinessSubCategoryCode\nSRCLineOfBusinessSubCategoryCode sink(input(\n\t\tLineofBusinessCodeSubCatCode_Key as integer,\n\t\tLineofBusinessCodeSubCatCode as string,\n\t\tLineofBusinessCodeSubCatCodeDesc as string,\n\t\tLineofBusinessCodeCatCode as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tLineofBusinessCodeSubCatCode = Code,\n\t\tLineofBusinessCodeSubCatCodeDesc = Description,\n\t\tLineofBusinessCodeCatCode = LOBCategory\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRDimLineOfBusinessSubCategoryCode"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DimPlanBenefits')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_PlanBenefits",
								"type": "DatasetReference"
							},
							"name": "SRCPlanBenefits"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimPlanBenefits",
								"type": "DatasetReference"
							},
							"name": "TRDimPlanBenefits"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tPlan_Benefit_ID as string,\n\t\tPlan_Benefit_Start_Date as date 'dd-MM-yyyy',\n\t\tPlan_Benefit_End_Date as date 'dd-MM-yyyy',\n\t\tPlan_Benefit_Description as string,\n\t\t{Line_Of_Business                  } as boolean,\n\t\t{Plan_Product_Code                 } as string,\n\t\tBenefit_Plan_Type_Code as short,\n\t\tPopulation_Category_Code as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCPlanBenefits\nSRCPlanBenefits sink(input(\n\t\tPlanBenefits_Key as integer,\n\t\tPlan_Benefit_ID as string,\n\t\tPlan_Benefit_Start_Date as date,\n\t\tPlan_Benefit_End_Date as date,\n\t\tPlan_Benefit_Desp as string,\n\t\tLineofBusinessCodeCatCode as string,\n\t\tPlan_Product_Code as string,\n\t\tBenefitPlanTypeCode as string,\n\t\tPopulationCatCode as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPlan_Benefit_ID,\n\t\tPlan_Benefit_Start_Date,\n\t\tPlan_Benefit_End_Date,\n\t\tPlan_Benefit_Desp = Plan_Benefit_Description,\n\t\tLineofBusinessCodeCatCode = {Line_Of_Business                  },\n\t\tPlan_Product_Code = {Plan_Product_Code                 },\n\t\tBenefitPlanTypeCode = Benefit_Plan_Type_Code,\n\t\tPopulationCatCode = Population_Category_Code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRDimPlanBenefits"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DimPopulationCategoryCodes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_PopulationCategoryCodes",
								"type": "DatasetReference"
							},
							"name": "SRCPopulationCategoryCodes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimPopulationCategoryCode",
								"type": "DatasetReference"
							},
							"name": "TRDimPopulationCategoryCodes"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string,\n\t\t{LOB Sub-Category} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCPopulationCategoryCodes\nSRCPopulationCategoryCodes sink(input(\n\t\tPopulationCategoryCode_Key as integer,\n\t\tPopulationCategoryCode as string,\n\t\tPopulationCategoryCodeDesc as string,\n\t\tLineofBusinessCodeCatCode as string,\n\t\tLineofBusinessCodeSubCatCode as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPopulationCategoryCode = Code,\n\t\tPopulationCategoryCodeDesc = Description,\n\t\tLineofBusinessCodeSubCatCode = {LOB Sub-Category}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRDimPopulationCategoryCodes"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIMPlaceOfService')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DimPlaceOfServiceCodes",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SinkPlaceOfService",
								"type": "DatasetReference"
							},
							"name": "PlaceOfService"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tPlaceofService_KEY as integer,\n\t\tPlaceofService_Code as string,\n\t\tPlaceofService_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPlaceofService_Code = Code,\n\t\tPlaceofService_Desc = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> PlaceOfService"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_claim_status_code')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Claim_Status_Codes",
								"type": "DatasetReference"
							},
							"name": "DimClaimStatusCode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ClaimStatusCodes",
								"type": "DatasetReference"
							},
							"name": "ClaimStatusCode"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tValue as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DimClaimStatusCode\nDimClaimStatusCode sink(input(\n\t\tClaim_Status_KEY as integer,\n\t\tClaim_Status_Code as string,\n\t\tClaim_Status_Code_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tClaim_Status_Code = Value,\n\t\tClaim_Status_Code_Desc = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ClaimStatusCode"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimCPTCode')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DimCPTCode",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SinkDimCPTCode",
								"type": "DatasetReference"
							},
							"name": "DimCPTCode"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tCPTCode_KEY as integer,\n\t\tCPT_Code as string,\n\t\tCPTCode_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tCPT_Code = Code,\n\t\tCPTCode_Desc = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DimCPTCode"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimDRGCodes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRCDimDRGCodes",
								"type": "DatasetReference"
							},
							"name": "SourceDimDRGCodes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SINKDimDRGCodes",
								"type": "DatasetReference"
							},
							"name": "DimDRGCodes"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceDimDRGCodes\nSourceDimDRGCodes sink(input(\n\t\tDRGCode_KEY as integer,\n\t\tDRG_Code as string,\n\t\tDRGCode_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tDRG_Code = Code,\n\t\tDRGCode_Desc = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DimDRGCodes"
				}
			},
			"dependsOn": []
		}
	]
}