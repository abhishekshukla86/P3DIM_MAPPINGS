{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "P3DataFactoryDimMappings"
		},
		"AzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage'"
		},
		"Sink_Azure_DIM_Mapping_DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Sink_Azure_DIM_Mapping_DB'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DIM_Abhishek_Initial_Mapping_Tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dim_claim_status_codes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_claim_status_code",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DimClaimStatusCode": {},
									"ClaimStatusCode": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DimDiagnosisGroupCodes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DimDiagnosisGroupCodes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCDiagnosisGroupCodes": {},
									"SinkDiagnosisGroupCodes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DimIcd10 DiagnosisCodes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DimICD10DiagnosisCodes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"Sinkicd10DiagnosisCodes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIMPlaceOfService",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIMPlaceOfService",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"PlaceOfService": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DimCPTCode",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DimCPTCode",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"DimCPTCode": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DimDRGCodes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DimDRGCodes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceDimDRGCodes": {},
									"DimDRGCodes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HCPCSCodeDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "HCPCSCode",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceHCPCScsv": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DimICD10ProcedureCodes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DimICD10ProcedureCodes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCDimICD10ProcedureCodes": {},
									"SinkDimICD10ProcedureCodes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DIM_claim_status_code')]",
				"[concat(variables('factoryId'), '/dataflows/DimDiagnosisGroupCodes')]",
				"[concat(variables('factoryId'), '/dataflows/DimICD10DiagnosisCodes')]",
				"[concat(variables('factoryId'), '/dataflows/DIMPlaceOfService')]",
				"[concat(variables('factoryId'), '/dataflows/DimCPTCode')]",
				"[concat(variables('factoryId'), '/dataflows/DimDRGCodes')]",
				"[concat(variables('factoryId'), '/dataflows/HCPCSCode')]",
				"[concat(variables('factoryId'), '/dataflows/DimICD10ProcedureCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_DimLineOfBusinessSubCategoryCode",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DimLineOfBusinessSubCategoryCode",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCLineOfBusinessSubCategoryCode": {},
									"TRDimLineOfBusinessSubCategoryCode": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_DimEnrollment_contract",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DimEnrollment_contract",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCEnrollmentContract": {},
									"TRDimEnrollmentContract": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_ContractCategoryCode",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ContractCategoryCode",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCContractCategoryCode": {},
									"TRDimContractCategoryCode": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_DimPlanBenefits",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DimPlanBenefits",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCPlanBenefits": {},
									"TRDimPlanBenefits": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_DimPopulationCategoryCodes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DimPopulationCategoryCodes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCPopulationCategoryCodes": {},
									"TRDimPopulationCategoryCodes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_DimBenefitPlantype",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DimBenefitPlantype",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCBenefitPlantype": {},
									"TRDimBenefitPlantype": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_DimLineOfBusinessSubCategoryCode')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DimEnrollment_contract')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ContractCategoryCode')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DimPlanBenefits')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DimPopulationCategoryCodes')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DimBenefitPlantype')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dim_Abhi_Mappings2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DimEnrollmentBenefitPlan",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DimEnrollmentBenefitPlan",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceEnrollmentBenefitPlan": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DImSpecialityCodes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SpecialityTaxonomyCodes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DimPayer",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DimPayer",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DimLanguage",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DimLanguage",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DimPlan",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DimPlan",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DimProduct",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DimProviderGroup",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DimProviderGroup",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DimProviderType",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DimProviderType",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCDimProviderType": {},
									"DimProviderType": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DimEnrollmentBenefitPlan')]",
				"[concat(variables('factoryId'), '/dataflows/SpecialityTaxonomyCodes')]",
				"[concat(variables('factoryId'), '/dataflows/DimPayer')]",
				"[concat(variables('factoryId'), '/dataflows/DimLanguage')]",
				"[concat(variables('factoryId'), '/dataflows/DimPlan')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]",
				"[concat(variables('factoryId'), '/dataflows/DimProviderGroup')]",
				"[concat(variables('factoryId'), '/dataflows/DimProviderType')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1-1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_CoverageTier",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_CoverageTier",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCoverageTier": {},
									"TRCoverageTier": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_CostSharingReductionCode",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_CostSharingReductionCode",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCostSharingReductionCode": {},
									"TRCostSharingReductionCode": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_DimEthnicityCodes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DimEthnicityCodes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SREthnicityCodes": {},
									"TREthnicityCodes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_MaritalCodes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_MaritalCodes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRMaritalCodes": {},
									"TRMaritalCodes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_MDCCodes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_MDCCodes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRMDCCodes": {},
									"TRMDCCodes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_MemberContactPref",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_MemberContactPref",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRMemberContactPref": {},
									"TRMemberContactPref": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_RaceType",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_RaceType",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRRaceType": {},
									"TRRaceType": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_SourceSystem",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_SourceSystem",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRSourceSystem": {},
									"TRSourceSystem": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_CoverageTier')]",
				"[concat(variables('factoryId'), '/dataflows/DF_CostSharingReductionCode')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DimEthnicityCodes')]",
				"[concat(variables('factoryId'), '/dataflows/DF_MaritalCodes')]",
				"[concat(variables('factoryId'), '/dataflows/DF_MDCCodes')]",
				"[concat(variables('factoryId'), '/dataflows/DF_MemberContactPref')]",
				"[concat(variables('factoryId'), '/dataflows/DF_RaceType')]",
				"[concat(variables('factoryId'), '/dataflows/DF_SourceSystem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_ICD10ProcedureCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "icd10 Procedure Codes_csv.csv",
						"container": "dimmapping"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ClaimStatusCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Claim_Status_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Claim_Status_Code",
						"type": "varchar"
					},
					{
						"name": "Claim_Status_Code_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimClaimStatusCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Claim_Status_Codes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Medical(Encounter) Claim Status",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Claim Status Codes.xlsx",
						"container": "dimmapping"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Value",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DimProviderType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_ProviderTypeCode.csv",
						"container": "dimmapping"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatSetEnrollmentBenefitPlan')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_Enrollment_Benefit_Plan.csv",
						"container": "dimmapping"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Enrollment_Benefit_Plan_ID ",
						"type": "String"
					},
					{
						"name": "Enrollment_Contract_ID",
						"type": "String"
					},
					{
						"name": "Plan_ID",
						"type": "String"
					},
					{
						"name": "Plan_Benefit_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DiagnosisGroupCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "icd10 Diagnosis Group Codes.csv",
						"container": "dimmapping"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Group Code",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimCPTCode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CPT Codes.csv",
						"container": "dimmapping"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimContractCategoryCode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContractCategoryCode_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContractCategoryCode",
						"type": "varchar"
					},
					{
						"name": "ContractCategoryCodedesC",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimContractCategoryCode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimHCPCSCode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HCPCS Codes.csv",
						"container": "dimmapping"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimICD10ProcedureCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ICD10ProcedureCode_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ICD10Procedure_Code",
						"type": "varchar"
					},
					{
						"name": "ICD10ProcedureCode_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimICD10ProcedureCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimPlaceOfServiceCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "PlaceofService Codes_v2.csv",
						"container": "dimmapping"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HCPCSDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HCPCS Codes.csv",
						"container": "dimmapping"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SC_DimProviderGroup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_Provider_Group_non_dupi.csv",
						"container": "dimmapping"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "GROUP_PROVIDER_ID",
						"type": "String"
					},
					{
						"name": "GROUP_NAME",
						"type": "String"
					},
					{
						"name": "Provider_Group_Status            ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Address_1         ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Address_2         ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Zip_Code         ",
						"type": "String"
					},
					{
						"name": "Provider_Group_City              ",
						"type": "String"
					},
					{
						"name": "Provider_Group_County_Code        ",
						"type": "String"
					},
					{
						"name": "Provider_Group_State_Code       ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Country_Code    ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Contact           ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Phone             ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Fax               ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Email             ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Group_Date        ",
						"type": "String"
					},
					{
						"name": "Provider_Group_End_Date          ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Type              ",
						"type": "String"
					},
					{
						"name": "Provider_Group_Function_Indicator  ",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SINKDimDRGCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DRGCode_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DRG_Code",
						"type": "varchar"
					},
					{
						"name": "DRGCode_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimDRGCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SINK_DimHCPCSCode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HCPCSCode_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "HCPCS_Code",
						"type": "varchar"
					},
					{
						"name": "HCPCSCode_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimHCPCSCode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRCDimDRGCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DRG Codes_v3.csv",
						"container": "dimmapping"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_BenefitPlantype')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_BenefitPlantype.csv",
						"container": "kamlendublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_ContractCategoryCode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_ContractCategoryCode.csv",
						"container": "kamlendublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code ",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_DimICD10DiagnosisCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "icd10 Diagnosis Codes.csv",
						"container": "dimmapping"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_DimLanguage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_LanguageCodes_non_dupli.xlsx",
						"container": "dimmapping"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ISO 639-2 Code",
						"type": "String"
					},
					{
						"name": "English name of Language",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_DimPayer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_PayerCodes.xlsx",
						"container": "dimmapping"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Value",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_DimPlan')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "SRC_PlanCode",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_PlanCode_xlx.xlsx",
						"container": "dimmapping"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Plan_ID                             ",
						"type": "String"
					},
					{
						"name": "Plan_Start_Date",
						"type": "String"
					},
					{
						"name": "Plan_End_Date",
						"type": "String"
					},
					{
						"name": "Plan_Name_Description            ",
						"type": "String"
					},
					{
						"name": "Line_Of_Business                  ",
						"type": "String"
					},
					{
						"name": "Plan_Product_Code                 ",
						"type": "String"
					},
					{
						"name": "market_Type                       ",
						"type": "String"
					},
					{
						"name": "Grandfathered_Plan_Flag              ",
						"type": "String"
					},
					{
						"name": "Metal_level                        ",
						"type": "String"
					},
					{
						"name": "Acturial_Value ",
						"type": "String"
					},
					{
						"name": "Issuer_State",
						"type": "String"
					},
					{
						"name": "Issuer_ID",
						"type": "String"
					},
					{
						"name": "Plan_On_Off_Exchange_Indicator",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_DimProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Product Codes",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_Product Codes_updated.xlsx",
						"container": "dimmapping"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "PRODUCT CODE",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_DimSpecialityCodesCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_SpecialityTaxonomyCodes.csv",
						"container": "dimmapping"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Speciality_KEY",
						"type": "String"
					},
					{
						"name": "CMS SPECIALTY CODE",
						"type": "String"
					},
					{
						"name": "CMS SPECIALTY DESCRIPTION",
						"type": "String"
					},
					{
						"name": "PROVIDER TAXONOMY CODE",
						"type": "String"
					},
					{
						"name": "PROVIDER TAXONOMY DESCRIPTION TYPE",
						"type": "String"
					},
					{
						"name": "PROVIDER TAXONOMY DESCRIPTION CLASSIFICATION and SPECIALIZATION",
						"type": "String"
					},
					{
						"name": "RBI DATA SPECIALITY CODE",
						"type": "String"
					},
					{
						"name": "PROVIDER TYPE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_Enrollment_contract')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_Enrollnment_contract.csv",
						"container": "kamlendublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_LineOfBusinessCategoryCode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_LineOfBusinessCategoryCode.csv",
						"container": "kamlendublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_LineOfBusinessSubCategoryCode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_LineOfBusinessSubCategoryCode.csv",
						"container": "kamlendublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "LOBCategory",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_PlanBenefits')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_PlanBenefits.csv",
						"container": "kamlendublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Plan_Benefit_ID",
						"type": "String"
					},
					{
						"name": "Plan_Benefit_Start_Date",
						"type": "String"
					},
					{
						"name": "Plan_Benefit_End_Date",
						"type": "String"
					},
					{
						"name": "Plan_Benefit_Description",
						"type": "String"
					},
					{
						"name": "Line_Of_Business                  ",
						"type": "String"
					},
					{
						"name": "Plan_Product_Code                 ",
						"type": "String"
					},
					{
						"name": "Benefit_Plan_Type_Code",
						"type": "String"
					},
					{
						"name": "Population_Category_Code",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_PopulationCategoryCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_PopulationCategoryCodes.csv",
						"container": "kamlendublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "LOB Sub-Category",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_SpecialityTaxonomyCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_SpecialityTaxonomyCodes_CSV3.csv",
						"container": "dimmapping"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Speciality_KEY",
						"type": "String"
					},
					{
						"name": "CMS SPECIALTY CODE",
						"type": "String"
					},
					{
						"name": "CMS SPECIALTY DESCRIPTION",
						"type": "String"
					},
					{
						"name": "PROVIDER TAXONOMY CODE",
						"type": "String"
					},
					{
						"name": "PROVIDER TAXONOMY DESCRIPTION TYPE",
						"type": "String"
					},
					{
						"name": "PROVIDER TAXONOMY DESCRIPTION CLASSIFICATION and SPECIALIZATION",
						"type": "String"
					},
					{
						"name": "RBI DATA SPECIALITY CODE",
						"type": "String"
					},
					{
						"name": "PROVIDER TYPE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_SpecialityTaxonomyCodes_Excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_SpecialityTaxonomyCodes_EXCEL.xlsx",
						"container": "dimmapping"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Speciality_KEY",
						"type": "String"
					},
					{
						"name": "CMS SPECIALTY CODE",
						"type": "String"
					},
					{
						"name": "CMS SPECIALTY DESCRIPTION",
						"type": "String"
					},
					{
						"name": "PROVIDER TAXONOMY CODE",
						"type": "String"
					},
					{
						"name": "PROVIDER TAXONOMY DESCRIPTION TYPE",
						"type": "String"
					},
					{
						"name": "PROVIDER TAXONOMY DESCRIPTION CLASSIFICATION and SPECIALIZATION",
						"type": "String"
					},
					{
						"name": "RBI DATA SPECIALITY CODE",
						"type": "String"
					},
					{
						"name": "PROVIDER TYPE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SR_CostSharingReductionCode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_CostSharingReductionCode.csv",
						"container": "kamlendublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Cost_Sharing_Reduction_Code",
						"type": "String"
					},
					{
						"name": "Cost_Sharing_Reduction_Code_Desc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SR_CoverageTier')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_CoverageTier.csv",
						"container": "kamlendublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Coverage_Tier",
						"type": "String"
					},
					{
						"name": "Coverage_Tier_Desc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SR_EthnicityCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_EthnicityCode.csv",
						"container": "kamlendublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Ethnicity_Code_Desc                 ",
						"type": "String"
					},
					{
						"name": "Ethnicity_Code                 ",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SR_MDCCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MDC_Codes.csv",
						"container": "kamlendublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "MDC_Code",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Start DRG_Code",
						"type": "String"
					},
					{
						"name": "END_DRG_Code",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SR_MaritalCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_MaritalCodes.csv",
						"container": "kamlendublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Marital_Status_Code            ",
						"type": "String"
					},
					{
						"name": "Marital_Status_Code_Desc       ",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SR_MemberContactPref')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_MemberContactPref.csv",
						"container": "kamlendublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Member_Contact_Pref",
						"type": "String"
					},
					{
						"name": "Member_Contact_Pref_Desc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SR_RaceType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_RaceType.csv",
						"container": "kamlendublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Race_Type                      ",
						"type": "String"
					},
					{
						"name": "Race_Type_Desc               ",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SR_SourceSystem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_SourceSystem.csv",
						"container": "kamlendublob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SourceSystem_Code",
						"type": "String"
					},
					{
						"name": "SourceSystem_Desc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkDiagnosisGroupCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ICD10DiagnosisGroupCode_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ICD10DiagnosisGroup_Code",
						"type": "varchar"
					},
					{
						"name": "ICD10DiagnosisGroupCode_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimICD10DiagnosisGroupCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkDimCPTCode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CPTCode_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CPT_Code",
						"type": "varchar"
					},
					{
						"name": "CPTCode_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimCPTCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkDimICD10ProcedureCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet2",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "icd10 Procedure Codes.xlsx",
						"container": "dimmapping"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkPlaceOfService')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PlaceofService_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PlaceofService_Code",
						"type": "varchar"
					},
					{
						"name": "PlaceofService_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimPlaceofService"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_DimEnrollmentBenefitPlan')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Enrollment_Benefit_Plan_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Enrollment_Benefit_Plan_ID",
						"type": "varchar"
					},
					{
						"name": "Enrollment_Benefit_Plan_Desc",
						"type": "varchar"
					},
					{
						"name": "Enrollment_Contract_ID",
						"type": "varchar"
					},
					{
						"name": "Plan_ID",
						"type": "varchar"
					},
					{
						"name": "Plan_Benefit_ID",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimEnrollmentBenefitPlan"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_DimLanguage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LanguageCode_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Language_Code",
						"type": "varchar"
					},
					{
						"name": "Language_Name",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimLanguageCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_DimPayer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Payer_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Payer_Code",
						"type": "varchar"
					},
					{
						"name": "Payer_Description",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimPayer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_DimPlan')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Plan_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Plan_ID",
						"type": "varchar"
					},
					{
						"name": "Plan_Start_Date",
						"type": "date"
					},
					{
						"name": "Plan_End_Date",
						"type": "date"
					},
					{
						"name": "Plan_Name_Description",
						"type": "varchar"
					},
					{
						"name": "LineofBusinessCodeCatCode",
						"type": "varchar"
					},
					{
						"name": "Plan_Product_Code",
						"type": "varchar"
					},
					{
						"name": "market_Type",
						"type": "varchar"
					},
					{
						"name": "Grandfathered_Plan_Flag",
						"type": "char"
					},
					{
						"name": "Metal_level",
						"type": "varchar"
					},
					{
						"name": "Acturial_Value",
						"type": "varchar"
					},
					{
						"name": "Issuer_State",
						"type": "varchar"
					},
					{
						"name": "Issuer_ID",
						"type": "varchar"
					},
					{
						"name": "Plan_On_Off_Exchange_Indicator",
						"type": "char"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimPlan"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_DimProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductCode_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Product_Code",
						"type": "varchar"
					},
					{
						"name": "Product_Code_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimProduct"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_DimProviderGroup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProviderGroup_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Provider_Group_ID",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Name",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Status",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Address_1",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Address_2",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Zip_Code",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_City_Code",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_County_Code",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_State_Code",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Country_Code",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Contact",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Phone",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Fax",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Email",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Group_Date",
						"type": "date"
					},
					{
						"name": "Provider_Group_End_Date",
						"type": "date"
					},
					{
						"name": "Provider_Group_Type",
						"type": "varchar"
					},
					{
						"name": "Provider_Group_Function_Indicator",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIMProviderGroup"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_DimProviderType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProviderType_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Provider_Type_Code",
						"type": "varchar"
					},
					{
						"name": "Provider_Type_Description",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimProviderType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_HCPCS_Azure')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HCPCSCode_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "HCPCS_Code",
						"type": "varchar"
					},
					{
						"name": "HCPCSCode_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimHCPCSCode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_MDCCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "MDC_Code_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MDC_Code",
						"type": "varchar"
					},
					{
						"name": "MDC_Code_Desc",
						"type": "varchar"
					},
					{
						"name": "Start_DRG_Code",
						"type": "varchar"
					},
					{
						"name": "End_DRG_Code",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimMDCCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_SpecialityTaxonomyCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Specialty_ID_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Specialty_ID",
						"type": "varchar"
					},
					{
						"name": "Specialty_Description",
						"type": "varchar"
					},
					{
						"name": "Taxonomy_Code",
						"type": "varchar"
					},
					{
						"name": "Taxonomy_Desc_Type",
						"type": "varchar"
					},
					{
						"name": "Taxonomy_Description",
						"type": "varchar"
					},
					{
						"name": "Provider_Type_Code",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimSpecialtyCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_icd10DiagnosisCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ICD10DiagnosisCode_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ICD10Diagnosis_Code",
						"type": "varchar"
					},
					{
						"name": "ICD10DiagnosisCode_Desc",
						"type": "varchar"
					},
					{
						"name": "ICD10DiagnosisGroup_Code",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimICD10DiagnosisCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DIMMDC_Codes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "MDC_Code_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MDC_Code",
						"type": "varchar"
					},
					{
						"name": "MDC_Code_Desc",
						"type": "varchar"
					},
					{
						"name": "Start_DRG_Code",
						"type": "varchar"
					},
					{
						"name": "End_DRG_Code",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimMDCCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DimBenefitPlanType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "BenefitPlanType_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BenefitPlanTypeCode",
						"type": "varchar"
					},
					{
						"name": "BenefitPlanTypeCodedesp",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimBenefitPlanType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DimCostSharingReductionCode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CostSharingReductionCode_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CostSharingReduction_Code",
						"type": "varchar"
					},
					{
						"name": "CostSharingReductionCode_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimCostSharingReductionCode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DimCoverageTier')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CoverageTier_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CoverageTier_Code",
						"type": "varchar"
					},
					{
						"name": "CoverageTier_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimCoverageTier"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DimEnrollmentContract')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EnrollmentContract_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Enrollment_Contract_ID",
						"type": "varchar"
					},
					{
						"name": "Contract_Number",
						"type": "varchar"
					},
					{
						"name": "Contract_Desc",
						"type": "varchar"
					},
					{
						"name": "Contract_Category_Code",
						"type": "varchar"
					},
					{
						"name": "LineofBusinessCodeCatCode",
						"type": "varchar"
					},
					{
						"name": "LineofBusinessCodeSubCatCode",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimEnrollmentContract"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DimEthnicityCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EthnicityCode_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Ethnicity_Code",
						"type": "varchar"
					},
					{
						"name": "EthnicityCode_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimEthnicityCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DimLineOfBusinessCategoryCode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LineofBusinessCodeCatCode_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineofBusinessCodeCatCode",
						"type": "varchar"
					},
					{
						"name": "LineofBusinessCodeCatDesc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimLineofBusinessCodeCatCode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DimLineofBusinessCodeSubCatCode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LineofBusinessCodeSubCatCode_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineofBusinessCodeSubCatCode",
						"type": "varchar"
					},
					{
						"name": "LineofBusinessCodeSubCatCodeDesc",
						"type": "varchar"
					},
					{
						"name": "LineofBusinessCodeCatCode",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimLineofBusinessCodeSubCatCode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DimMaritalCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "MaritalCode_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Marital_Code",
						"type": "varchar"
					},
					{
						"name": "MaritalCode_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimMaritalCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DimMemberContactPref')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "MemberContactPref_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MemberContactPref_Code",
						"type": "varchar"
					},
					{
						"name": "MemberContactPref_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimMemberContactPref"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DimPlanBenefits')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PlanBenefits_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Plan_Benefit_ID",
						"type": "varchar"
					},
					{
						"name": "Plan_Benefit_Start_Date",
						"type": "date"
					},
					{
						"name": "Plan_Benefit_End_Date",
						"type": "date"
					},
					{
						"name": "Plan_Benefit_Desp",
						"type": "varchar"
					},
					{
						"name": "LineofBusinessCodeCatCode",
						"type": "varchar"
					},
					{
						"name": "Plan_Product_Code",
						"type": "varchar"
					},
					{
						"name": "BenefitPlanTypeCode",
						"type": "varchar"
					},
					{
						"name": "PopulationCatCode",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimPlanBenefits"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DimPopulationCategoryCode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PopulationCategoryCode_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PopulationCategoryCode",
						"type": "varchar"
					},
					{
						"name": "PopulationCategoryCodeDesc",
						"type": "varchar"
					},
					{
						"name": "LineofBusinessCodeCatCode",
						"type": "varchar"
					},
					{
						"name": "LineofBusinessCodeSubCatCode",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimPopulationCategoryCode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DimRaceType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RaceType_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Race_Type",
						"type": "varchar"
					},
					{
						"name": "RaceType_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimRaceType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DimSourceSystem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sink_Azure_DIM_Mapping_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SourceSystem_KEY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SourceSystem_Code",
						"type": "varchar"
					},
					{
						"name": "SourceSystem_Desc",
						"type": "varchar"
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordCreationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordUpdationUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ph_varchar1",
						"type": "varchar"
					},
					{
						"name": "ph_varchar2",
						"type": "varchar"
					},
					{
						"name": "ph_Decimal1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_Decimal2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ph_datetime1",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ph_datetime2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimSourceSystem"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sink_Azure_DIM_Mapping_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Azure_DIM_Mapping_DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Sink_Azure_DIM_Mapping_DB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AbhisheShuklaRunTime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 30,
							"cleanup": true
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ContractCategoryCode')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_ContractCategoryCode",
								"type": "DatasetReference"
							},
							"name": "SRCContractCategoryCode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimContractCategoryCode",
								"type": "DatasetReference"
							},
							"name": "TRDimContractCategoryCode"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{Code } as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCContractCategoryCode\nSRCContractCategoryCode sink(input(\n\t\tContractCategoryCode_Key as integer,\n\t\tContractCategoryCode as string,\n\t\tContractCategoryCodedesC as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tContractCategoryCode = {Code },\n\t\tContractCategoryCodedesC = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRDimContractCategoryCode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_ContractCategoryCode')]",
				"[concat(variables('factoryId'), '/datasets/DimContractCategoryCode')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CostSharingReductionCode')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SR_CostSharingReductionCode",
								"type": "DatasetReference"
							},
							"name": "SRCostSharingReductionCode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimCostSharingReductionCode",
								"type": "DatasetReference"
							},
							"name": "TRCostSharingReductionCode"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCost_Sharing_Reduction_Code as string,\n\t\tCost_Sharing_Reduction_Code_Desc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCostSharingReductionCode\nSRCostSharingReductionCode sink(input(\n\t\tCostSharingReductionCode_KEY as integer,\n\t\tCostSharingReduction_Code as string,\n\t\tCostSharingReductionCode_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tCostSharingReduction_Code = Cost_Sharing_Reduction_Code,\n\t\tCostSharingReductionCode_Desc = Cost_Sharing_Reduction_Code_Desc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRCostSharingReductionCode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SR_CostSharingReductionCode')]",
				"[concat(variables('factoryId'), '/datasets/TR_DimCostSharingReductionCode')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CoverageTier')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SR_CoverageTier",
								"type": "DatasetReference"
							},
							"name": "SRCoverageTier"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimCoverageTier",
								"type": "DatasetReference"
							},
							"name": "TRCoverageTier"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCoverage_Tier as string,\n\t\tCoverage_Tier_Desc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCoverageTier\nSRCoverageTier sink(input(\n\t\tCoverageTier_KEY as integer,\n\t\tCoverageTier_Code as string,\n\t\tCoverageTier_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tCoverageTier_Code = Coverage_Tier,\n\t\tCoverageTier_Desc = Coverage_Tier_Desc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRCoverageTier"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SR_CoverageTier')]",
				"[concat(variables('factoryId'), '/datasets/TR_DimCoverageTier')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DimBenefitPlantype')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_BenefitPlantype",
								"type": "DatasetReference"
							},
							"name": "SRCBenefitPlantype"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimBenefitPlanType",
								"type": "DatasetReference"
							},
							"name": "TRDimBenefitPlantype"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCBenefitPlantype\nSRCBenefitPlantype sink(input(\n\t\tBenefitPlanType_Key as integer,\n\t\tBenefitPlanTypeCode as string,\n\t\tBenefitPlanTypeCodedesp as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tBenefitPlanTypeCode = Code,\n\t\tBenefitPlanTypeCodedesp = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRDimBenefitPlantype"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_BenefitPlantype')]",
				"[concat(variables('factoryId'), '/datasets/TR_DimBenefitPlanType')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DimEnrollment_contract')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_Enrollment_contract",
								"type": "DatasetReference"
							},
							"name": "SRCEnrollmentContract"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimEnrollmentContract",
								"type": "DatasetReference"
							},
							"name": "TRDimEnrollmentContract"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tskipLines: 1) ~> SRCEnrollmentContract\nSRCEnrollmentContract sink(input(\n\t\tEnrollmentContract_Key as integer,\n\t\tEnrollment_Contract_ID as string,\n\t\tContract_Number as string,\n\t\tContract_Desc as string,\n\t\tContract_Category_Code as string,\n\t\tLineofBusinessCodeCatCode as string,\n\t\tLineofBusinessCodeSubCatCode as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tEnrollment_Contract_ID = Column_1,\n\t\tContract_Number = Column_2,\n\t\tContract_Desc = Column_3,\n\t\tContract_Category_Code = Column_4,\n\t\tLineofBusinessCodeCatCode = Column_5,\n\t\tLineofBusinessCodeSubCatCode = Column_6\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRDimEnrollmentContract"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_Enrollment_contract')]",
				"[concat(variables('factoryId'), '/datasets/TR_DimEnrollmentContract')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DimEthnicityCodes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SR_EthnicityCodes",
								"type": "DatasetReference"
							},
							"name": "SREthnicityCodes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimEthnicityCodes",
								"type": "DatasetReference"
							},
							"name": "TREthnicityCodes"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{Ethnicity_Code_Desc                 } as string,\n\t\t{Ethnicity_Code                 } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SREthnicityCodes\nSREthnicityCodes sink(input(\n\t\tEthnicityCode_KEY as integer,\n\t\tEthnicity_Code as string,\n\t\tEthnicityCode_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tEthnicity_Code = {Ethnicity_Code_Desc                 },\n\t\tEthnicityCode_Desc = {Ethnicity_Code                 }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TREthnicityCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SR_EthnicityCodes')]",
				"[concat(variables('factoryId'), '/datasets/TR_DimEthnicityCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DimLineOfBusinessCategoryCode')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_LineOfBusinessCategoryCode",
								"type": "DatasetReference"
							},
							"name": "SRCLineOfBusinessCategoryCode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimLineOfBusinessCategoryCode",
								"type": "DatasetReference"
							},
							"name": "TRDimLineOfBusinessCategoryCode"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCLineOfBusinessCategoryCode\nSRCLineOfBusinessCategoryCode sink(input(\n\t\tLineofBusinessCodeCatCode_Key as integer,\n\t\tLineofBusinessCodeCatCode as string,\n\t\tLineofBusinessCodeCatDesc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tLineofBusinessCodeCatCode = Code,\n\t\tLineofBusinessCodeCatDesc = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRDimLineOfBusinessCategoryCode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_LineOfBusinessCategoryCode')]",
				"[concat(variables('factoryId'), '/datasets/TR_DimLineOfBusinessCategoryCode')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DimLineOfBusinessSubCategoryCode')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_LineOfBusinessSubCategoryCode",
								"type": "DatasetReference"
							},
							"name": "SRCLineOfBusinessSubCategoryCode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimLineofBusinessCodeSubCatCode",
								"type": "DatasetReference"
							},
							"name": "TRDimLineOfBusinessSubCategoryCode"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string,\n\t\tLOBCategory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCLineOfBusinessSubCategoryCode\nSRCLineOfBusinessSubCategoryCode sink(input(\n\t\tLineofBusinessCodeSubCatCode_Key as integer,\n\t\tLineofBusinessCodeSubCatCode as string,\n\t\tLineofBusinessCodeSubCatCodeDesc as string,\n\t\tLineofBusinessCodeCatCode as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tLineofBusinessCodeSubCatCode = Code,\n\t\tLineofBusinessCodeSubCatCodeDesc = Description,\n\t\tLineofBusinessCodeCatCode = LOBCategory\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRDimLineOfBusinessSubCategoryCode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_LineOfBusinessSubCategoryCode')]",
				"[concat(variables('factoryId'), '/datasets/TR_DimLineofBusinessCodeSubCatCode')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DimPlanBenefits')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_PlanBenefits",
								"type": "DatasetReference"
							},
							"name": "SRCPlanBenefits"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimPlanBenefits",
								"type": "DatasetReference"
							},
							"name": "TRDimPlanBenefits"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tPlan_Benefit_ID as string,\n\t\tPlan_Benefit_Start_Date as date 'dd-MM-yyyy',\n\t\tPlan_Benefit_End_Date as date 'dd-MM-yyyy',\n\t\tPlan_Benefit_Description as string,\n\t\t{Line_Of_Business                  } as boolean,\n\t\t{Plan_Product_Code                 } as string,\n\t\tBenefit_Plan_Type_Code as short,\n\t\tPopulation_Category_Code as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCPlanBenefits\nSRCPlanBenefits sink(input(\n\t\tPlanBenefits_Key as integer,\n\t\tPlan_Benefit_ID as string,\n\t\tPlan_Benefit_Start_Date as date,\n\t\tPlan_Benefit_End_Date as date,\n\t\tPlan_Benefit_Desp as string,\n\t\tLineofBusinessCodeCatCode as string,\n\t\tPlan_Product_Code as string,\n\t\tBenefitPlanTypeCode as string,\n\t\tPopulationCatCode as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPlan_Benefit_ID,\n\t\tPlan_Benefit_Start_Date,\n\t\tPlan_Benefit_End_Date,\n\t\tPlan_Benefit_Desp = Plan_Benefit_Description,\n\t\tLineofBusinessCodeCatCode = {Line_Of_Business                  },\n\t\tPlan_Product_Code = {Plan_Product_Code                 },\n\t\tBenefitPlanTypeCode = Benefit_Plan_Type_Code,\n\t\tPopulationCatCode = Population_Category_Code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRDimPlanBenefits"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_PlanBenefits')]",
				"[concat(variables('factoryId'), '/datasets/TR_DimPlanBenefits')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DimPopulationCategoryCodes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_PopulationCategoryCodes",
								"type": "DatasetReference"
							},
							"name": "SRCPopulationCategoryCodes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimPopulationCategoryCode",
								"type": "DatasetReference"
							},
							"name": "TRDimPopulationCategoryCodes"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string,\n\t\t{LOB Sub-Category} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCPopulationCategoryCodes\nSRCPopulationCategoryCodes sink(input(\n\t\tPopulationCategoryCode_Key as integer,\n\t\tPopulationCategoryCode as string,\n\t\tPopulationCategoryCodeDesc as string,\n\t\tLineofBusinessCodeCatCode as string,\n\t\tLineofBusinessCodeSubCatCode as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPopulationCategoryCode = Code,\n\t\tPopulationCategoryCodeDesc = Description,\n\t\tLineofBusinessCodeSubCatCode = {LOB Sub-Category}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRDimPopulationCategoryCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_PopulationCategoryCodes')]",
				"[concat(variables('factoryId'), '/datasets/TR_DimPopulationCategoryCode')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_MDCCodes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SR_MDCCodes",
								"type": "DatasetReference"
							},
							"name": "SRMDCCodes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DIMMDC_Codes",
								"type": "DatasetReference"
							},
							"name": "TRMDCCodes"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tMDC_Code as string,\n\t\tDescription as string,\n\t\t{Start DRG_Code} as string,\n\t\tEND_DRG_Code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRMDCCodes\nSRMDCCodes sink(input(\n\t\tMDC_Code_KEY as integer,\n\t\tMDC_Code as string,\n\t\tMDC_Code_Desc as string,\n\t\tStart_DRG_Code as string,\n\t\tEnd_DRG_Code as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tMDC_Code,\n\t\tMDC_Code_Desc = Description,\n\t\tStart_DRG_Code = {Start DRG_Code},\n\t\tEnd_DRG_Code = END_DRG_Code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRMDCCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SR_MDCCodes')]",
				"[concat(variables('factoryId'), '/datasets/TR_DIMMDC_Codes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_MaritalCodes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SR_MaritalCodes",
								"type": "DatasetReference"
							},
							"name": "SRMaritalCodes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimMaritalCodes",
								"type": "DatasetReference"
							},
							"name": "TRMaritalCodes"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{Marital_Status_Code            } as string,\n\t\t{Marital_Status_Code_Desc       } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRMaritalCodes\nSRMaritalCodes sink(input(\n\t\tMaritalCode_KEY as integer,\n\t\tMarital_Code as string,\n\t\tMaritalCode_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tMarital_Code = {Marital_Status_Code            },\n\t\tMaritalCode_Desc = {Marital_Status_Code_Desc       }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRMaritalCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SR_MaritalCodes')]",
				"[concat(variables('factoryId'), '/datasets/TR_DimMaritalCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_MemberContactPref')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SR_MemberContactPref",
								"type": "DatasetReference"
							},
							"name": "SRMemberContactPref"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimMemberContactPref",
								"type": "DatasetReference"
							},
							"name": "TRMemberContactPref"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tMember_Contact_Pref as string,\n\t\tMember_Contact_Pref_Desc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRMemberContactPref\nSRMemberContactPref sink(input(\n\t\tMemberContactPref_KEY as integer,\n\t\tMemberContactPref_Code as string,\n\t\tMemberContactPref_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tMemberContactPref_Code = Member_Contact_Pref,\n\t\tMemberContactPref_Desc = Member_Contact_Pref_Desc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRMemberContactPref"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SR_MemberContactPref')]",
				"[concat(variables('factoryId'), '/datasets/TR_DimMemberContactPref')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_RaceType')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SR_RaceType",
								"type": "DatasetReference"
							},
							"name": "SRRaceType"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimRaceType",
								"type": "DatasetReference"
							},
							"name": "TRRaceType"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{Race_Type                      } as string,\n\t\t{Race_Type_Desc               } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRRaceType\nSRRaceType sink(input(\n\t\tRaceType_KEY as integer,\n\t\tRace_Type as string,\n\t\tRaceType_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tRace_Type = {Race_Type                      },\n\t\tRaceType_Desc = {Race_Type_Desc               }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRRaceType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SR_RaceType')]",
				"[concat(variables('factoryId'), '/datasets/TR_DimRaceType')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_SourceSystem')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SR_SourceSystem",
								"type": "DatasetReference"
							},
							"name": "SRSourceSystem"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TR_DimSourceSystem",
								"type": "DatasetReference"
							},
							"name": "TRSourceSystem"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tSourceSystem_Code as string,\n\t\tSourceSystem_Desc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRSourceSystem\nSRSourceSystem sink(input(\n\t\tSourceSystem_KEY as integer,\n\t\tSourceSystem_Code as string,\n\t\tSourceSystem_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tSourceSystem_Code,\n\t\tSourceSystem_Desc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TRSourceSystem"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SR_SourceSystem')]",
				"[concat(variables('factoryId'), '/datasets/TR_DimSourceSystem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIMPlaceOfService')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DimPlaceOfServiceCodes",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SinkPlaceOfService",
								"type": "DatasetReference"
							},
							"name": "PlaceOfService"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tPlaceofService_KEY as integer,\n\t\tPlaceofService_Code as string,\n\t\tPlaceofService_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPlaceofService_Code = Code,\n\t\tPlaceofService_Desc = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> PlaceOfService"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DimPlaceOfServiceCodes')]",
				"[concat(variables('factoryId'), '/datasets/SinkPlaceOfService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_claim_status_code')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Claim_Status_Codes",
								"type": "DatasetReference"
							},
							"name": "DimClaimStatusCode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ClaimStatusCodes",
								"type": "DatasetReference"
							},
							"name": "ClaimStatusCode"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tValue as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DimClaimStatusCode\nDimClaimStatusCode sink(input(\n\t\tClaim_Status_KEY as integer,\n\t\tClaim_Status_Code as string,\n\t\tClaim_Status_Code_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tClaim_Status_Code = Value,\n\t\tClaim_Status_Code_Desc = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ClaimStatusCode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Claim_Status_Codes')]",
				"[concat(variables('factoryId'), '/datasets/ClaimStatusCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimCPTCode')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DimCPTCode",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SinkDimCPTCode",
								"type": "DatasetReference"
							},
							"name": "DimCPTCode"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tCPTCode_KEY as integer,\n\t\tCPT_Code as string,\n\t\tCPTCode_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tCPT_Code = Code,\n\t\tCPTCode_Desc = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DimCPTCode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DimCPTCode')]",
				"[concat(variables('factoryId'), '/datasets/SinkDimCPTCode')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimDRGCodes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRCDimDRGCodes",
								"type": "DatasetReference"
							},
							"name": "SourceDimDRGCodes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SINKDimDRGCodes",
								"type": "DatasetReference"
							},
							"name": "DimDRGCodes"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceDimDRGCodes\nSourceDimDRGCodes sink(input(\n\t\tDRGCode_KEY as integer,\n\t\tDRG_Code as string,\n\t\tDRGCode_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tDRG_Code = Code,\n\t\tDRGCode_Desc = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DimDRGCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRCDimDRGCodes')]",
				"[concat(variables('factoryId'), '/datasets/SINKDimDRGCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimDiagnosisGroupCodes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DiagnosisGroupCodes",
								"type": "DatasetReference"
							},
							"name": "SRCDiagnosisGroupCodes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SinkDiagnosisGroupCodes",
								"type": "DatasetReference"
							},
							"name": "SinkDiagnosisGroupCodes"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{Group Code} as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCDiagnosisGroupCodes\nSRCDiagnosisGroupCodes sink(input(\n\t\tICD10DiagnosisGroupCode_KEY as integer,\n\t\tICD10DiagnosisGroup_Code as string,\n\t\tICD10DiagnosisGroupCode_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tICD10DiagnosisGroup_Code = {Group Code},\n\t\tICD10DiagnosisGroupCode_Desc = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkDiagnosisGroupCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DiagnosisGroupCodes')]",
				"[concat(variables('factoryId'), '/datasets/SinkDiagnosisGroupCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimEnrollmentBenefitPlan')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DatSetEnrollmentBenefitPlan",
								"type": "DatasetReference"
							},
							"name": "SourceEnrollmentBenefitPlan"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_DimEnrollmentBenefitPlan",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{Enrollment_Benefit_Plan_ID } as string,\n\t\tEnrollment_Contract_ID as string,\n\t\tPlan_ID as string,\n\t\tPlan_Benefit_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceEnrollmentBenefitPlan\nSourceEnrollmentBenefitPlan sink(input(\n\t\tEnrollment_Benefit_Plan_key as integer,\n\t\tEnrollment_Benefit_Plan_ID as string,\n\t\tEnrollment_Benefit_Plan_Desc as string,\n\t\tEnrollment_Contract_ID as string,\n\t\tPlan_ID as string,\n\t\tPlan_Benefit_ID as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tEnrollment_Benefit_Plan_ID = {Enrollment_Benefit_Plan_ID },\n\t\tEnrollment_Contract_ID,\n\t\tPlan_ID,\n\t\tPlan_Benefit_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DatSetEnrollmentBenefitPlan')]",
				"[concat(variables('factoryId'), '/datasets/Sink_DimEnrollmentBenefitPlan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimHCPCSCode')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DimHCPCSCode",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SINK_DimHCPCSCode",
								"type": "DatasetReference"
							},
							"name": "sinkDimHCPCSCode"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tHCPCSCode_KEY as integer,\n\t\tHCPCS_Code as string,\n\t\tHCPCSCode_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tHCPCS_Code = Code,\n\t\tHCPCSCode_Desc = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkDimHCPCSCode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DimHCPCSCode')]",
				"[concat(variables('factoryId'), '/datasets/SINK_DimHCPCSCode')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimICD10DiagnosisCodes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_DimICD10DiagnosisCodes",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_icd10DiagnosisCodes",
								"type": "DatasetReference"
							},
							"name": "Sinkicd10DiagnosisCodes"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tICD10DiagnosisCode_Key as integer,\n\t\tICD10Diagnosis_Code as string,\n\t\tICD10DiagnosisCode_Desc as string,\n\t\tICD10DiagnosisGroup_Code as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tICD10Diagnosis_Code = Code,\n\t\tICD10DiagnosisCode_Desc = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> Sinkicd10DiagnosisCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_DimICD10DiagnosisCodes')]",
				"[concat(variables('factoryId'), '/datasets/Sink_icd10DiagnosisCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimICD10ProcedureCodes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CSV_ICD10ProcedureCodes",
								"type": "DatasetReference"
							},
							"name": "SRCDimICD10ProcedureCodes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimICD10ProcedureCodes",
								"type": "DatasetReference"
							},
							"name": "SinkDimICD10ProcedureCodes"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCDimICD10ProcedureCodes\nSRCDimICD10ProcedureCodes sink(input(\n\t\tICD10ProcedureCode_Key as integer,\n\t\tICD10Procedure_Code as string,\n\t\tICD10ProcedureCode_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tICD10Procedure_Code = Code,\n\t\tICD10ProcedureCode_Desc = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkDimICD10ProcedureCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_ICD10ProcedureCodes')]",
				"[concat(variables('factoryId'), '/datasets/DimICD10ProcedureCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimLanguage')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_DimLanguage",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_DimLanguage",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{ISO 639-2 Code} as string,\n\t\t{English name of Language} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tLanguageCode_key as integer,\n\t\tLanguage_Code as string,\n\t\tLanguage_Name as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tLanguage_Code = {ISO 639-2 Code},\n\t\tLanguage_Name = {English name of Language}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_DimLanguage')]",
				"[concat(variables('factoryId'), '/datasets/Sink_DimLanguage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimPayer')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_DimPayer",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_DimPayer",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tValue as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tPayer_KEY as integer,\n\t\tPayer_Code as string,\n\t\tPayer_Description as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPayer_Code = Value,\n\t\tPayer_Description = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_DimPayer')]",
				"[concat(variables('factoryId'), '/datasets/Sink_DimPayer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimPlan')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_DimPlan",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_DimPlan",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{Plan_ID                             } as string,\n\t\tPlan_Start_Date as string,\n\t\tPlan_End_Date as string,\n\t\t{Plan_Name_Description            } as string,\n\t\t{Line_Of_Business                  } as string,\n\t\t{Plan_Product_Code                 } as string,\n\t\t{market_Type                       } as string,\n\t\t{Grandfathered_Plan_Flag              } as string,\n\t\t{Metal_level                        } as string,\n\t\t{Acturial_Value } as string,\n\t\tIssuer_State as string,\n\t\tIssuer_ID as string,\n\t\tPlan_On_Off_Exchange_Indicator as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tPlan_key as integer,\n\t\tPlan_ID as string,\n\t\tPlan_Start_Date as date,\n\t\tPlan_End_Date as date,\n\t\tPlan_Name_Description as string,\n\t\tLineofBusinessCodeCatCode as string,\n\t\tPlan_Product_Code as string,\n\t\tmarket_Type as string,\n\t\tGrandfathered_Plan_Flag as string,\n\t\tMetal_level as string,\n\t\tActurial_Value as string,\n\t\tIssuer_State as string,\n\t\tIssuer_ID as string,\n\t\tPlan_On_Off_Exchange_Indicator as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPlan_ID = {Plan_ID                             },\n\t\tPlan_Start_Date,\n\t\tPlan_End_Date,\n\t\tPlan_Name_Description = {Plan_Name_Description            },\n\t\tLineofBusinessCodeCatCode = {Line_Of_Business                  },\n\t\tPlan_Product_Code = {Plan_Product_Code                 },\n\t\tmarket_Type = {market_Type                       },\n\t\tGrandfathered_Plan_Flag = {Grandfathered_Plan_Flag              },\n\t\tMetal_level = {Metal_level                        },\n\t\tActurial_Value = {Acturial_Value },\n\t\tIssuer_State,\n\t\tIssuer_ID,\n\t\tPlan_On_Off_Exchange_Indicator\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_DimPlan')]",
				"[concat(variables('factoryId'), '/datasets/Sink_DimPlan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimProviderGroup')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SC_DimProviderGroup",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_DimProviderGroup",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tGROUP_PROVIDER_ID as string,\n\t\tGROUP_NAME as string,\n\t\t{Provider_Group_Status            } as string,\n\t\t{Provider_Group_Address_1         } as string,\n\t\t{Provider_Group_Address_2         } as string,\n\t\t{Provider_Group_Zip_Code         } as string,\n\t\t{Provider_Group_City              } as string,\n\t\t{Provider_Group_County_Code        } as string,\n\t\t{Provider_Group_State_Code       } as string,\n\t\t{Provider_Group_Country_Code    } as string,\n\t\t{Provider_Group_Contact           } as string,\n\t\t{Provider_Group_Phone             } as string,\n\t\t{Provider_Group_Fax               } as string,\n\t\t{Provider_Group_Email             } as string,\n\t\t{Provider_Group_Group_Date        } as string,\n\t\t{Provider_Group_End_Date          } as string,\n\t\t{Provider_Group_Type              } as string,\n\t\t{Provider_Group_Function_Indicator  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tProviderGroup_KEY as integer,\n\t\tProvider_Group_ID as string,\n\t\tProvider_Group_Name as string,\n\t\tProvider_Group_Status as string,\n\t\tProvider_Group_Address_1 as string,\n\t\tProvider_Group_Address_2 as string,\n\t\tProvider_Group_Zip_Code as string,\n\t\tProvider_Group_City_Code as string,\n\t\tProvider_Group_County_Code as string,\n\t\tProvider_Group_State_Code as string,\n\t\tProvider_Group_Country_Code as string,\n\t\tProvider_Group_Contact as string,\n\t\tProvider_Group_Phone as string,\n\t\tProvider_Group_Fax as string,\n\t\tProvider_Group_Email as string,\n\t\tProvider_Group_Group_Date as date,\n\t\tProvider_Group_End_Date as date,\n\t\tProvider_Group_Type as string,\n\t\tProvider_Group_Function_Indicator as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tProvider_Group_ID = GROUP_PROVIDER_ID,\n\t\tProvider_Group_Name = GROUP_NAME,\n\t\tProvider_Group_Status = {Provider_Group_Status            },\n\t\tProvider_Group_Address_1 = {Provider_Group_Address_1         },\n\t\tProvider_Group_Address_2 = {Provider_Group_Address_2         },\n\t\tProvider_Group_Zip_Code = {Provider_Group_Zip_Code         },\n\t\tProvider_Group_City_Code = {Provider_Group_City              },\n\t\tProvider_Group_County_Code = {Provider_Group_County_Code        },\n\t\tProvider_Group_State_Code = {Provider_Group_State_Code       },\n\t\tProvider_Group_Country_Code = {Provider_Group_Country_Code    },\n\t\tProvider_Group_Contact = {Provider_Group_Contact           },\n\t\tProvider_Group_Phone = {Provider_Group_Phone             },\n\t\tProvider_Group_Fax = {Provider_Group_Fax               },\n\t\tProvider_Group_Email = {Provider_Group_Email             },\n\t\tProvider_Group_Group_Date = {Provider_Group_Group_Date        },\n\t\tProvider_Group_End_Date = {Provider_Group_End_Date          },\n\t\tProvider_Group_Type = {Provider_Group_Type              },\n\t\tProvider_Group_Function_Indicator = {Provider_Group_Function_Indicator  }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SC_DimProviderGroup')]",
				"[concat(variables('factoryId'), '/datasets/Sink_DimProviderGroup')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimProviderType')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_DimProviderType",
								"type": "DatasetReference"
							},
							"name": "SRCDimProviderType"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_DimProviderType",
								"type": "DatasetReference"
							},
							"name": "DimProviderType"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCDimProviderType\nSRCDimProviderType sink(input(\n\t\tProviderType_KEY as integer,\n\t\tProvider_Type_Code as string,\n\t\tProvider_Type_Description as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tProvider_Type_Code = Code,\n\t\tProvider_Type_Description = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DimProviderType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DimProviderType')]",
				"[concat(variables('factoryId'), '/datasets/Sink_DimProviderType')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HCPCSCode')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "HCPCSDataSet",
								"type": "DatasetReference"
							},
							"name": "SourceHCPCScsv"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_HCPCS_Azure",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCode as string,\n\t\tDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceHCPCScsv\nSourceHCPCScsv sink(input(\n\t\tHCPCSCode_KEY as integer,\n\t\tHCPCS_Code as string,\n\t\tHCPCSCode_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tHCPCS_Code = Code,\n\t\tHCPCSCode_Desc = Description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HCPCSDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Sink_HCPCS_Azure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SpecialityTaxonomyCodes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_SpecialityTaxonomyCodes_Excel",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_SpecialityTaxonomyCodes",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tSpeciality_KEY as string,\n\t\t{CMS SPECIALTY CODE} as string,\n\t\t{CMS SPECIALTY DESCRIPTION} as string,\n\t\t{PROVIDER TAXONOMY CODE} as string,\n\t\t{PROVIDER TAXONOMY DESCRIPTION TYPE} as string,\n\t\t{PROVIDER TAXONOMY DESCRIPTION CLASSIFICATION and SPECIALIZATION} as string,\n\t\t{RBI DATA SPECIALITY CODE} as string,\n\t\t{PROVIDER TYPE} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tSpecialty_ID_key as integer,\n\t\tSpecialty_ID as string,\n\t\tSpecialty_Description as string,\n\t\tTaxonomy_Code as string,\n\t\tTaxonomy_Desc_Type as string,\n\t\tTaxonomy_Description as string,\n\t\tProvider_Type_Code as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tSpecialty_ID = {CMS SPECIALTY CODE},\n\t\tSpecialty_Description = {CMS SPECIALTY DESCRIPTION},\n\t\tTaxonomy_Code = {PROVIDER TAXONOMY CODE},\n\t\tTaxonomy_Desc_Type = {PROVIDER TAXONOMY DESCRIPTION TYPE},\n\t\tTaxonomy_Description = {PROVIDER TAXONOMY DESCRIPTION CLASSIFICATION and SPECIALIZATION},\n\t\tProvider_Type_Code = {PROVIDER TYPE}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_SpecialityTaxonomyCodes_Excel')]",
				"[concat(variables('factoryId'), '/datasets/Sink_SpecialityTaxonomyCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_DimProduct",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_DimProduct",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{PRODUCT CODE} as string,\n\t\tDESCRIPTION as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tProductCode_key as integer,\n\t\tProduct_Code as string,\n\t\tProduct_Code_Desc as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tProduct_Code = {PRODUCT CODE},\n\t\tProduct_Code_Desc = DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_DimProduct')]",
				"[concat(variables('factoryId'), '/datasets/Sink_DimProduct')]"
			]
		}
	]
}