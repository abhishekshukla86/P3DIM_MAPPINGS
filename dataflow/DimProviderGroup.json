{
	"name": "DimProviderGroup",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SC_DimProviderGroup",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Sink_DimProviderGroup",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"script": "source(output(\n\t\tGROUP_PROVIDER_ID as string,\n\t\tGROUP_NAME as string,\n\t\t{Provider_Group_Status            } as string,\n\t\t{Provider_Group_Address_1         } as string,\n\t\t{Provider_Group_Address_2         } as string,\n\t\t{Provider_Group_Zip_Code         } as string,\n\t\t{Provider_Group_City              } as string,\n\t\t{Provider_Group_County_Code        } as string,\n\t\t{Provider_Group_State_Code       } as string,\n\t\t{Provider_Group_Country_Code    } as string,\n\t\t{Provider_Group_Contact           } as string,\n\t\t{Provider_Group_Phone             } as string,\n\t\t{Provider_Group_Fax               } as string,\n\t\t{Provider_Group_Email             } as string,\n\t\t{Provider_Group_Group_Date        } as string,\n\t\t{Provider_Group_End_Date          } as string,\n\t\t{Provider_Group_Type              } as string,\n\t\t{Provider_Group_Function_Indicator  } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tProviderGroup_KEY as integer,\n\t\tProvider_Group_ID as string,\n\t\tProvider_Group_Name as string,\n\t\tProvider_Group_Status as string,\n\t\tProvider_Group_Address_1 as string,\n\t\tProvider_Group_Address_2 as string,\n\t\tProvider_Group_Zip_Code as string,\n\t\tProvider_Group_City_Code as string,\n\t\tProvider_Group_County_Code as string,\n\t\tProvider_Group_State_Code as string,\n\t\tProvider_Group_Country_Code as string,\n\t\tProvider_Group_Contact as string,\n\t\tProvider_Group_Phone as string,\n\t\tProvider_Group_Fax as string,\n\t\tProvider_Group_Email as string,\n\t\tProvider_Group_Group_Date as date,\n\t\tProvider_Group_End_Date as date,\n\t\tProvider_Group_Type as string,\n\t\tProvider_Group_Function_Indicator as string,\n\t\tCreationDate as timestamp,\n\t\tUpdationDate as timestamp,\n\t\tRecordCreationUserID as integer,\n\t\tRecordUpdationUserID as integer,\n\t\tph_varchar1 as string,\n\t\tph_varchar2 as string,\n\t\tph_Decimal1 as decimal(10,2),\n\t\tph_Decimal2 as decimal(10,2),\n\t\tph_datetime1 as timestamp,\n\t\tph_datetime2 as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tProvider_Group_ID = GROUP_PROVIDER_ID,\n\t\tProvider_Group_Name = GROUP_NAME,\n\t\tProvider_Group_Status = {Provider_Group_Status            },\n\t\tProvider_Group_Address_1 = {Provider_Group_Address_1         },\n\t\tProvider_Group_Address_2 = {Provider_Group_Address_2         },\n\t\tProvider_Group_Zip_Code = {Provider_Group_Zip_Code          },\n\t\tProvider_Group_City_Code = {Provider_Group_City              }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
		}
	}
}